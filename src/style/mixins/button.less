.btn-size(@padding; @font-size; @border-radius) {
  padding: @padding;
  font-size: @font-size;
  border-radius: @border-radius;
}

.btn-color(@color, @bacnkgroundColor, @borderColor) {
  color: @color;
  background-color: @bacnkgroundColor;
  border-color: @borderColor;
}

.font-css(@fontSize: 14px, @fontweigth: 500, @fontFamily: "微软雅黑") {
  font-size: @fontSize;
  font-weight: @fontweigth;
  font-family: @fontFamily;
}

.btn() {
  text-align: center;
  outline: none;
  transition: all .3s;
  cursor: pointer;
  .font-css();
  .btn-size(@css-padding-default, @css-font-size, 0);

  &-small {
    .btn-size(@css-padding-small, @css-font-size-small, 0);
  }

  &-large {
    .btn-size(@css-padding-large, @css-font-size-large, 0);
  }

  &.disabled,
  &[disabled] {
    cursor: rgb(196, 196, 196)3;

    >* {
      pointer-events: none;
    }
  }
}


.btn-variatio(@color, @backColor, @border) {
  .btn-color(@color, @backColor, @border);

  &:hover {
    .btn-color(tint(@color, 20%); shade(@backColor, 10%); tint(@border, 20%));
    border-radius: @css-border-radius;
  }

  &:active,
  &.active {
    .btn-color(tint(@color, 5%); shade(@backColor, 5%); tint(@border, 5%));
  }

  &.disabled,
  &[disabled],
  fieldset[disabled] & {

    &,
    &:hover,
    &:focus,
    &:active,
    &.active {
      .btn-color(@color; @backColor; @border);
    }
  }
}

.btn-group-base(@btn-name) {
  position: relative;
  display: inline-block;
  vertical-align: middle;

  >.@{btn-name} {
    position: relative;
    float: left;

    &:hover,
    &:active,
    &:active {
      z-index: 2;
    }
  }

  &-circle .@{btn-name} {
    border-radius: @css-radius-size;
  }

  &-large&-circle .@{btn-name} {
    border-radius: @css-radius-size-large
  }

  &-large {
    &>.@{btn-name} {
      .btn-size(@css-padding-large, @css-font-size-large, 0);
    }
  }
}

//默认
.btn-default() {
  .font-css();
  border-width: 1px;
  border-style: solid;
  .btn-variatio(@css-color-primary, @css-white, @css-color-primary);
}

//primary
.btn-primary {
  .btn-variatio(@css-white, @css-color-primary, @css-color-primary);
}

//success
.btn-success {
  .btn-variatio(@css-white, @css-color-sucess, @css-color-sucess);
}

.btn-warning {
  .btn-variatio(@css-white, @css-color-warning, @css-color-warning);
}

//error
.btn-error {
  .btn-variatio(@css-white, @css-color-error, @css-color-error);
}

.btn-text {
  border: 0;
  color: @css-color-primary;
  background: transparent;

  &:hover {
    .btn-color(transparent, transparent, transparent);
    color: tint(@css-color-primary, 30%);
  }
}

.btn-circle(@btn-name: qk-btn) {
  border-radius: @css-radius-size;

  .@{btn-name}-large {
    border-radius: @css-radius-size-large;
  }
}

//group
.btn-group(@btn-name: qk-btn) {
  .btn-group-base(@btn-name);

  .@{btn-name}+.@{btn-name},
  .@{btn-name}+&,
  &+.@{btn-name},
  &+& {
    margin-left: -1px;
  }

  .@{btn-name} {
    &:hover {
      border-radius: 0;
    }
  }

  .@{btn-name}:not(:first-child):not(:last-child) {
    margin-left: -1px;
    border-left: 0;
    border-right: 0;

    &:not(:last-child) {
      border-radius: 0;
    }
  }

  .@{btn-name}:first-child {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
    margin-right: -1px;
  }

  .@{btn-name}:last-child {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }

  &>& {
    float: left;
  }

  &>&:not(:first-child):not(:last-child)>.@{btn-name} {
    border-radius: 0;
  }
}